Le tri par insertion est le meilleur sur les petits tableaux

Complexité dans le meilleur des cas :
Dans le meilleur des cas, avec des données déjà triées, l'algorithme effectuera seulement n-1 comparaisons et n affectations. 
Sa complexité dans le meilleur des cas est donc en Θ(n).

Complexité en moyenne :
Si tous les éléments de la série à trier sont distincts et que toutes leurs permutations sont équiprobables, 
la complexité en moyenne de l'algorithme est de l'ordre de n(n-1) /4 comparaisons et affectations. 
La complexité en moyenne du tri par insertion est donc également en Θ(n2).

Complexité dans le pire des cas :
Dans le pire des cas, avec des données triées à l'envers, l’algorithme effectue de l’ordre de n (n-1) /2 affectations et comparaisons. 
On a donc une complexité dans le pire des cas du tri par insertion en Θ(n2).

La différence entre les 2 complexités est le nb d’opérations.
On notera également une propriété importante du tri par insertion : contrairement à celle d'autres méthodes, 
son efficacité est meilleure si le tableau initial possède un certain ordre. 
L'algorithme tirera en effet parti de tout ordre partiel présent dans le tableau.

Les tris par ordre croissant et par ordre décroissant ont le même temps d’exécution.
